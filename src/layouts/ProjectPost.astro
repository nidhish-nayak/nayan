---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";

type Props = CollectionEntry<"projects">["data"];

const { title, description, pubDate, updatedDate, image, tools, github } =
	Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style lang="scss">
			main {
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
			}
			.prose {
				width: 1080px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));

				@media (max-width: 480px) {
					margin: 0 auto;
					padding: 0;
				}
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.25em 0;
			}
			.title p {
				margin: 0 0 0.5em 0;
			}
			.title ul {
				display: flex;
				justify-content: center;
				align-items: center;
				flex-wrap: wrap;
				gap: 1em;
				margin: 1em 0 1em 0;
			}
			.date {
				margin-bottom: 0.5em;
				margin-top: 1em;
				font-size: 1rem;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			p {
				margin: 0;
				margin-top: 0.5em;
				margin-bottom: 2em;
			}
			a {
				text-decoration: none;
			}
		</style>
	</head>

	<body>
		<Header />
		<main class="min-h-screen max-w-screen-2xl">
			<article>
				<div class="hero-image">
					{
						image && (
							<img
								width={400}
								height={260}
								src={image}
								alt="blogImage"
								loading="lazy"
								decoding="async"
								class="object-cover w-full h-full mx-auto shadow-xl md:max-w-screen-sm lg:max-w-screen-sm xl:max-w-screen-md"
							/>
						)
					}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1 class="text-3xl sm:text-5xl md:text-inherit">{title}</h1>
						<p class="text-base sm:text-xl dark:text-zinc-400 md:text-inherit">
							{description}
						</p>
						<ul class="p-0 list-none">
							{
								tools?.map((tool: any) => (
									<li class="p-0 px-3 py-1 m-0 text-sm text-black rounded-full dark:bg-zinc-800 dark:text-white sm:text-lg bg-zinc-300">
										{tool}
									</li>
								))
							}
						</ul>
						<hr class="m-0 sm:my-12" />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
